name: Build Android

on:
  push:
    branches: [main, release/*]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (debug/release)'
        required: true
        default: 'release'
        type: choice
        options:
          - debug
          - release

jobs:
  build-android:
    name: Build Android APK/AAB
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Install dependencies
        run: npm ci

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradlew executable
        run: cd android && chmod +x ./gradlew

      - name: Build Android Release APK
        if: ${{ github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main' }}
        run: cd android && ./gradlew assembleRelease

      - name: Build Android Debug APK
        if: ${{ github.event.inputs.build_type == 'debug' }}
        run: cd android && ./gradlew assembleDebug

      - name: Build Android App Bundle (AAB)
        if: ${{ github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/') }}
        run: cd android && ./gradlew bundleRelease

      - name: Sign APK
        if: ${{ github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main' }}
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: fanz-mobile-android-apk
          path: android/app/build/outputs/apk/**/*.apk
          retention-days: 14

      - name: Upload AAB artifact
        if: ${{ github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: fanz-mobile-android-aab
          path: android/app/build/outputs/bundle/**/*.aab
          retention-days: 30

      - name: Deploy to Firebase App Distribution
        if: ${{ github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main' }}
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: testers
          file: android/app/build/outputs/apk/release/app-release-signed.apk
          releaseNotes: |
            Automated build from commit: ${{ github.sha }}
            Branch: ${{ github.ref_name }}
